@using CodeGenerator.Core.Implements;
@using System.Text;
using AutoMapper;
using System.Collections.Generic;
@{
    string firstNamespace = Model.Namespace[0];
    string ns = $"{Model.FullNamespace}.Profiles";
    var usingBuilder = new StringBuilder();
    usingBuilder.Append($"using {firstNamespace}.Infra.Common.Entity;\r\n");
    usingBuilder.Append($"using {firstNamespace}.Core.Entities;\r\n");

    var mapBuilder = new StringBuilder();
    foreach (var table in @Model.Tables)
    {
        usingBuilder.Append($"using {Model.FullNamespace}.DTOs.{table.ClassName};\r\n");
        mapBuilder.Append($"\t\t\t/* {table.Comment} */\r\n");
        mapBuilder.Append($"\t\t\tCreateMap<{table.ClassName},{table.ClassName}InputDto>();\r\n");
        mapBuilder.Append($"\t\t\tCreateMap<{table.ClassName}InputDto,{table.ClassName}>();\r\n");
        mapBuilder.Append($"\t\t\tCreateMap<{table.ClassName},{table.ClassName}Dto>();\r\n");
        mapBuilder.Append($"\t\t\tCreateMap<{table.ClassName}Dto,{table.ClassName}>();\r\n");
        mapBuilder.Append("\r\n");
    }
}
@usingBuilder.ToString()

namespace @ns
{
    /// <summary>
    /// AutoMapper 配置
    /// </summary>
    public class MapperProfiles : Profile
    {
        /// <summary>
        /// 配置Map
        /// </summary>
        public MapperProfiles()
        {
@mapBuilder.ToString()
        }
    }
}