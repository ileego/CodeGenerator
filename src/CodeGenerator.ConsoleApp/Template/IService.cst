@using CodeGenerator.Core.Implements;
@using CodeGenerator.Core.Utils;
@using System.Text;
@{
    string firstNamespace = ((string[])ViewBag.Namespace)[0];
    string ref1 = $"{firstNamespace}.Infra.Common.ValueModel";
    string ref2 = $"{ViewBag.FullNamespace}.DTOs";
    string ref3 = $"{ViewBag.FullNamespace}.DTOs.{Model.ClassName}";
    string interfaceName = "I{Model.ClassName}Service";
    string ns = $"{ViewBag.FullNamespace}.Services.Interfaces";
}
using System;
using System.Collections.Generic;
using System.Threading.Tasks;
using @ref1;
using @ref2;
using @ref3;

namespace @ns
{
    /// <summary>
    /// @Model.Description
    /// </summary>
    public interface @interfaceName
    {
        /// <summary>
        /// 新增
        /// </summary>
        /// <param name="input"></param>
        /// <param name="user"></param>
        /// <returns></returns>
        Task<@{@Model.Name}Input> Add(@{@Model.Name}Input input, UserModel user);
        /// <summary>
        /// 修改
        /// </summary>
        /// <param name="input"></param>
        /// <param name="user"></param>
        /// <returns></returns>
        Task<@{@Model.Name}Input> Edit(@{@Model.Name}Input input, UserModel user);
        /// <summary>
        /// 删除
        /// </summary>
        /// <param name="id"></param>
        /// <param name="user"></param>
        /// <returns></returns>
        Task<@{@Model.Name}Input> Delete(Guid id, UserModel user);
        /// <summary>
        /// 批量删除
        /// </summary>
        /// <param name="ids"></param>
        /// <param name="user"></param>
        /// <returns></returns>
        Task<bool> BulkDelete(ICollection<Guid> ids, UserModel user);
        /// <summary>
        /// 查询
        /// </summary>
        /// <param name="id"></param>
        /// <returns></returns>
        Task<@{@Model.Name}Input> QueryById(Guid id);
        /// <summary>
        /// 查询
        /// </summary>
        /// <param name="queryParams"></param>
        /// <returns></returns>
        Task<Pagination<@{@Model.Name}QueryResult>> Query(@{@Model.Name}QueryParams queryParams);
    }
}