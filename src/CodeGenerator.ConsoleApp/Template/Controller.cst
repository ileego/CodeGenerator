@using CodeGenerator.Core.Implements;
@using CodeGenerator.Core.Utils;
@using System.Text;
using Microsoft.AspNetCore.Http;
using Microsoft.AspNetCore.Mvc;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using Microsoft.Extensions.Logging;
using Microsoft.AspNetCore.Authorization;
@{
    string firstNamespace = ((string[])ViewBag.Namespace)[0];
    string ns = $"{ViewBag.FullNamespace}.Controllers";
    string controllerName = $"{Model.ClassName}Controller";
    
    string iServiceName = $"I{Model.ClassName}Service";
    string serviceName = $"{Model.VariableName}Service";
    string _serviceName = $"_{serviceName}";
    string ctor = $"{controllerName}({iServiceName} {serviceName})";

    var usingBuilder = new StringBuilder();
    usingBuilder.Append($"using {firstNamespace}.Application.DTOs.{Model.ClassName};\r\n");
    usingBuilder.Append($"using {firstNamespace}.Application.Services.{Model.ClassName};\r\n");
    usingBuilder.Append($"using {firstNamespace}.Infra.Common.Authorize;\r\n");
    usingBuilder.Append($"using {firstNamespace}.Infra.Common.Paging;\r\n");
    usingBuilder.Append($"using {firstNamespace}.Infra.Common.Service;\r\n");
}
@usingBuilder.ToString()

namespace @ns
{
    /// <summary>
    /// @Model.Comment - 应用接口
    /// </summary>
    [Route("api/[controller]")]
    [ApiController]
    public class @controllerName : ControllerBase
    {
        private readonly @iServiceName @_serviceName;

        /// <summary>
        /// Ctor
        /// </summary>
        public @ctor
        {
            this.@_serviceName = @serviceName;
        }

        /// <summary>
        /// 创建 - @Model.Comment
        /// </summary>
        /// <param name="inputDto"></param>
        /// <returns></returns>
        [HttpPost]
        [Route("create")]
        [Permission("@{@Model.Comment}管理", "创建")]
        public async Task<ActionResult<AppServiceResult<long>>> CreateAsync(
            [FromBody] @{@Model.ClassName}InputDto inputDto)
        {
            return await _@{@Model.VariableName}Service.CreateAsync(inputDto);
        }

        /// <summary>
        /// 修改 - @Model.Comment
        /// </summary>
        /// <param name="id"></param>
        /// <param name="inputDto"></param>
        /// <returns></returns>
        [HttpPost("update/{id}")]
        [Permission("@{@Model.Comment}管理", "修改")]
        public async Task<ActionResult<AppServiceResult>> UpdateAsync([FromRoute] long id,
            [FromBody] @{@Model.ClassName}InputDto inputDto)
        {
            return await _@{@Model.VariableName}Service.UpdateAsync(id, inputDto);
        }

        /// <summary>
        /// 删除 - @Model.Comment
        /// </summary>
        /// <param name="id"></param>
        /// <returns></returns>
        [HttpPost("delete/{id}")]
        [Permission("@{@Model.Comment}管理", "删除")]
        public async Task<ActionResult<AppServiceResult>> DeleteAsync([FromRoute] long id)
        {
            return await _@{@Model.VariableName}Service.DeleteAsync(id);
        }

        /// <summary>
        /// 按Id查询 - @Model.Comment
        /// </summary>
        /// <param name="id"></param>
        /// <returns></returns>
        [HttpGet("{id}")]
        [Permission("@{@Model.Comment}管理", "按Id查明细")]
        public async Task<ActionResult<AppServiceResult<@{@Model.ClassName}Dto>>> GetByIdAsync([FromRoute] long id)
        {
            return await _@{@Model.VariableName}Service.GetByIdAsync(id);
        }

        /// <summary>
        /// 查询 - @Model.Comment
        /// </summary>
        /// <param name="queryParams"></param>
        /// <returns></returns>
        [HttpPost]
        [Route("queryList")]
        [Permission("@{@Model.Comment}管理", "查询列表")]
        public async Task<ActionResult<AppServiceResult<PagedResult<@{@Model.ClassName}Dto>>>> QueryListAsync(
            [FromBody] @{@Model.ClassName}ParamsDto queryParams)
        {
            return await _@{@Model.VariableName}Service.QueryListAsync(queryParams);
        }
    }
}
