@using CodeGenerator.Core.Implements;
@using CodeGenerator.Core.Utils;
@using System.Text;
using System;
using System.Collections.Generic;
using System.Text;
using System.ComponentModel.DataAnnotations.Schema;
@{
    string ref1 = $"{ViewBag.FullNamespace}.Infra.Common.BaseEntities;";
    string ns = $"{ViewBag.FullNamespace}.Entities";
    var propertiesBuilder = new StringBuilder();
    var refTableBuilder = new StringBuilder();
    foreach (Field field in Model.Fields)
    {
        propertiesBuilder.Append($"\t\t/// <summary>\r\n\t\t/// {field.Comment}\r\n\t\t/// </summary>\r\n");
        propertiesBuilder.Append($"\t\tpublic {field.DataType} {field.PropertyName} {{ get; set; }}\r\n");
    }
    if(Model.ForeignKeys.Count > 0)
    {
        foreach (var foreignKey in Model.ForeignKeys)
        {

            refTableBuilder.Append($"\t\t/// <summary>\r\n\t\t/// {foreignKey.Field.Comment.Replace("主键","")}\r\n\t\t/// </summary>\r\n");
            refTableBuilder.Append($"\t\tpublic virtual {foreignKey.RefTableClassName} {foreignKey.RefTableClassName} {{ get; set; }}\r\n");
        }
    }
}
using @ref1

namespace @ns
{
    /// <summary>
    /// @Model.Comment
    /// </summary>
    public class @Model.ClassName : @Model.BaseClass
    {
@propertiesBuilder.ToString()
@refTableBuilder.ToString()     
    }
}